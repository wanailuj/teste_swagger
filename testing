openapi: 3.0.0
info:
  title: IFC Step Parser
  description: >-
    RESTful endpoints for managing construction projects, IFC files, and project
    data.
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
tags:
  - name: Projects
  - name: IFC Files
  - name: Project Data
paths:
  //projects:
    get:
      tags:
        - Projects
      summary: Get all projects
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Projects
      summary: Create a new project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Construction Project A
                description: This is a sample construction project.
                start_date: '2023-06-01'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //projects/{projectId}:
    get:
      tags:
        - Projects
      summary: Get a specific project
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Projects
      summary: Update an existing project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                end_date: '2023-12-31'
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Projects
      summary: Delete a project
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //projects/{projectId}/ifc-files:
    get:
      tags:
        - IFC Files
      summary: Get all IFC files for a project
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - IFC Files
      summary: Create an IFC files for a project
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ifc_file:
                  type: string
                  format: binary
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //projects/{projectId}/ifc-files/stats:
    get:
      tags:
        - IFC Files
      summary: Get all IFC files stats for a project
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //ifc-files/{ifcFileId}:
    get:
      tags:
        - IFC Files
      summary: Get a specific IFC file
      parameters:
        - name: ifcFileId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - IFC Files
      summary: Update a specific IFC file
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Sample_IFC_File.ifc
                description: This is a sample IFC file.
      parameters:
        - name: ifcFileId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - IFC Files
      summary: Delete a specific IFC file
      parameters:
        - name: ifcFileId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //ifc-files/{ifcFileId}/schemas/{ifcFileSchema}:
    get:
      tags:
        - IFC Files
      summary: Get a specific IFC file on schema
      parameters:
        - name: ifcFileId
          in: path
          schema:
            type: string
          required: true
        - name: ifcFileSchema
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //ifc-files/{ifcFileId}/last:
    get:
      tags:
        - IFC Files
      summary: Get the last IFC file
      parameters:
        - name: ifcFileId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //projects/{projectId}/data:
    get:
      tags:
        - Project Data
      summary: Get all project data for a project
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Project Data
      summary: Create a project data for a project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content:
                  - name: Project-SEP
                    description: Sepia Field Interconnection
                    type: IfcProject
                    IfcRelAggregates:
                      - SEP
                  - name: SEP
                    description: Sepia oil Field
                    type: IfcSite
                    IfcRelAggregates: []
                type: ifc-core-data
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //projects/{projectId}/data/stats:
    get:
      tags:
        - Project Data
      summary: Get all project data stats for a project
      parameters:
        - name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //project-data/{projectData}:
    get:
      tags:
        - Project Data
      summary: Get a specific project data
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Project Data
      summary: Update a specific project data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content:
                  - name: Project-SEP
                    description: Sepia Field Interconnection
                    type: IfcProject
                    IfcRelAggregates:
                      - SEP
                  - name: SEP
                    description: Sepia oil Field
                    type: IfcSite
                    IfcRelAggregates:
                      - FPCRC
                  - name: FPCRC
                    description: FP Carioca
                    type: IfcMarineFacility
                    IfcRelAggregates: []
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Project Data
      summary: Delete a specific project data
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //project-data/{projectData}/last:
    get:
      tags:
        - Project Data
      summary: Get the last project data
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //project-data/{projectData}/objects/{objectName}:
    get:
      tags:
        - Project Data
      summary: Get a specific project data object
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
        - name: objectName
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Project Data
      summary: Update a specific project data object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content:
                  - description: FP Carioca da Gema
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
        - name: objectName
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Project Data
      summary: Delete a specific project data object
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
        - name: objectName
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //project-data/{projectData}/ifc-files/last:
    get:
      tags:
        - Project Data
      summary: Get the last IFC file for a project data
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //iproject-data/{projectData}/ifc-files/schemas/{ifcFileSchema}:
    get:
      tags:
        - Project Data
      summary: Get a specific IFC file for a project data on schema
      parameters:
        - name: projectData
          in: path
          schema:
            type: string
          required: true
        - name: ifcFileSchema
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
